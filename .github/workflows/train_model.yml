name: Train Model

on: 
  push:
    branches:
      - main

jobs:
  experiment:
    name: Train Model in Development
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Install Azure ML extension
      run: |
        az extension add --name ml

    - name: Configure preview extension installation
      run: |
        az config set extension.dynamic_install_allow_preview=true

    - name: Azure CLI Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CRENDENTIALS }}

    - name: Train model in development environment
      run: |
        az ml job create --file jobs/job.yml \
          --resource-group rg-dp100-labs --workspace-name mlw-dp100-labs \
          --set inputs.training_data=azureml:diabetes-dev-folder@latest --stream

    - name: Check job status
      id: check_experiment_status
      run: |
        job_id=$(az ml job create --file jobs/job.yml \
          --resource-group rg-dp100-labs --workspace-name mlw-dp100-labs \
          --set inputs.training_data=azureml:diabetes-dev-folder@latest --query id -o tsv --stream)
        echo "experiment_job_id=$job_id" >> $GITHUB_ENV

  production:
    name: Train Model in Production
    runs-on: ubuntu-latest
    needs: experiment
    if: success()  # Only run if experiment job is successful

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Install Azure ML extension
      run: |
        az extension add --name ml

    - name: Configure preview extension installation
      run: |
        az config set extension.dynamic_install_allow_preview=true

    - name: Azure CLI Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CRENDENTIALS }}

    - name: Train model in production environment
      run: |
        az ml job create --file jobs/job.yml \
          --resource-group rg-dp100-labs --workspace-name mlw-dp100-labs \
          --set inputs.training_data=azureml:diabetes-prod-folder@latest --stream

    - name: Check job status
      id: check_production_status
      run: |
        job_id=$(az ml job create --file jobs/job.yml \
          --resource-group rg-dp100-labs --workspace-name mlw-dp100-labs \
          --set inputs.training_data=azureml:diabetes-prod-folder@latest --query id -o tsv --stream)
        echo "production_job_id=$job_id" >> $GITHUB_ENV
